{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 startTime <- Sys.time()\
BostonHousing <- read.csv("C:/Users/Bob/BostonHousing.csv")\
fit2=lm(medv~lstat+age,data=BostonHousing)\
endTime <- Sys.time()\
print(endTime-startTime)\
\
# Importing required library\
library(tidyverse)\
library(caret)\
theme_set(theme_classic())\
startTime <- Sys.time()\
# Load the data\
data("Boston", package = "MASS")\
# Split the data into training and test set\
set.seed(123)\
training.samples <- Boston$medv %>%\
    createDataPartition(p = 0.7, list = FALSE)\
train.data  <- Boston[training.samples, ]\
test.data <- Boston[-training.samples, ]\
\
# Build the model\
model <- lm(medv ~ crim, zn, indus, chas, nox, rm, age, dis, rad, tax\
            ptratio, b, lstat, data = train.data)\
# Make predictions\
predictions <- model %>% predict(test.data)\
endTime <- Sys.time()\
print((endTime-startTime)*1000)\
# Model performance\
data.frame(RMSE = RMSE(predictions, test.data$medv),\
           R2 = R2(predictions, test.data$medv))\
\
ggplot(train.data, aes(lstat, medv) ) + geom_point() +\
    stat_smooth(method = lm, formula = y ~ poly(x, 2, raw = TRUE))}